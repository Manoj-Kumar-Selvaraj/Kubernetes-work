---
- name: Kubernetes Cluster Setup
  hosts: all
  become: yes
  vars:
    pod_network_cidr: "10.244.0.0/16"
    kube_version: "1.34.1"
    containerd_service: "containerd"

  tasks:

  - name: Disable swap
    ansible.builtin.command: swapoff -a

  - name: Comment out swap in fstab
    ansible.builtin.replace:
      path: /etc/fstab
      regexp: '(^.* swap .*$)'
      replace: '# \1'

  - name: Enable IP forwarding
    ansible.builtin.sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      state: present
      reload: yes

  - name: Install prerequisites
    ansible.builtin.apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gpg
      state: present
      update_cache: yes

  - name: Add Kubernetes apt key
    ansible.builtin.apt_key:
      url: https://pkgs.k8s.io/core:/stable:/v1.34/deb/Release.key
      state: present

  - name: Add Kubernetes repository
    ansible.builtin.apt_repository:
      repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.34/deb/ /"
      state: present

  - name: Install Kubernetes packages
    ansible.builtin.apt:
      name:
        - kubelet
        - kubeadm
        - kubectl
        - containerd
      state: present
      update_cache: yes

  - name: Hold Kubernetes packages
    ansible.builtin.apt:
      name:
        - kubelet
        - kubeadm
        - kubectl
      state: hold

  - name: Enable and start containerd
    ansible.builtin.systemd:
      name: "{{ containerd_service }}"
      enabled: yes
      state: started

- name: Initialize Kubernetes Master
  hosts: master
  become: yes
  tasks:

  - name: Initialize Kubernetes
    ansible.builtin.command: >
      kubeadm init --pod-network-cidr={{ pod_network_cidr }}
    args:
      creates: /etc/kubernetes/admin.conf
    register: kubeadm_init_output

  - name: Create .kube directory for azureuser
    ansible.builtin.file:
      path: /home/azureuser/.kube
      state: directory
      owner: azureuser
      group: azureuser
      mode: '0755'

  - name: Copy admin.conf to azureuser kube config
    ansible.builtin.copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/azureuser/.kube/config
      owner: azureuser
      group: azureuser
      mode: '0644'

  - name: Extract kubeadm join command
    ansible.builtin.shell: "kubeadm token create --print-join-command"
    register: join_command

- name: Join Worker Nodes
  hosts: workers
  become: yes
  tasks:

  - name: Join node to Kubernetes cluster
    ansible.builtin.command: "{{ hostvars['master']['join_command'].stdout }}"
